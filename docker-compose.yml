version: '3.8'

services:
  nginx:
    image: nginx:1.27-alpine
    restart: always
    volumes:
      - ./static:/code/static
      - ./media:/code/media
      - ./nginx:/etc/nginx/conf.d  # Removed trailing slash
    ports:
      - '8000:80'
    depends_on:
      - web

  web:
    build: .
    restart: always
    command: ["python", "-m", "uvicorn", "shalom_enterprise.asgi:application", "--host", "0.0.0.0", "--port", "8000", "--workers", "2", "--log-level", "info"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./static:/code/static
      - ./media:/code/media
    env_file: ./.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: shalom_afric  # Changed to match your Django settings
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      PGDATA: /var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migration:
    build: .
    env_file: ./.env
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py seed_db"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./static:/code/static
      - ./media:/code/media
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
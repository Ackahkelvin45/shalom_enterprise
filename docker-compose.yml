services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "python manage.py collectstatic --noinput &&
              python manage.py migrate &&
              gunicorn --bind 0.0.0.0:8000 --workers 2 --threads 2 --timeout 120 shalom_enterprise.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DB_NAME=${DB_NAME:-shalom_afric}
      - DB_USER=${DB_USER:-kelvin}
      - DB_PASSWORD=${DB_PASSWORD:-kelvin}
      - DB_HOST=db
      - DB_PORT=5432
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-True}
      - EMAIL_USE_SSL=${EMAIL_USE_SSL:-False}
      - EMAIL=${EMAIL}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
     
    sysctls:
      - net.ipv4.ip_local_port_range=1024 65535
      - net.ipv4.tcp_fin_timeout=30
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      app-network:
        aliases:
          - web

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME:-shalom_afric}
      - POSTGRES_USER=${DB_USER:-kelvin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-kelvin}
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-kelvin} -d ${DB_NAME:-shalom_afric} && psql -U ${DB_USER:-kelvin} -d ${DB_NAME:-shalom_afric} -c 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      app-network:
        aliases:
          - db

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge
    name: shalom_network